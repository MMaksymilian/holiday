<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:p="http://www.springframework.org/schema/p"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
                    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                    http://www.springframework.org/schema/security
                    http://www.springframework.org/schema/security/spring-security-3.0.xsd">

    <http auto-config="true" use-expressions="true"><!-- access-denied-page - insufficient priveleges-->
        <!--<intercept-url pattern="/flex/login" access="ROLE_ANONYMOUS" />-->
        <intercept-url pattern="/flex/chief" access="hasAnyRole('ROLE_CHIEF')"  />
        <intercept-url pattern="/flex/user" access="hasAnyRole('ROLE_USER')" />
        <form-login login-page="/flex/login"
                    authentication-failure-url="/flex/login" default-target-url="/flex/success.do"/>
        <logout logout-success-url="/flex/login"/>
        <access-denied-handler ref="accessDeniedHandler"/>
    </http>

    <!--<http entry-point-ref="entryPoint">-->
        <!--<anonymous enabled="false"/>-->
    <!--</http>-->

    <beans:bean id="entryPoint"
                class="org.springframework.flex.security3.FlexAuthenticationEntryPoint"/>

    <beans:bean id="accessDeniedHandler" class="test.primaris.security.AccessDeniedExceptionHandler"/>


    <global-method-security>
        <protect-pointcut expression="execution(* test.primaris.service.UserDataService.*(..))"
                          access="ROLE_USER"/>
        <protect-pointcut expression="execution(* test.primaris.service.AdminDataService.*(..))"
                          access="ROLE_CHIEF"/>
    </global-method-security>

    <beans:bean id="userDetailsService"
          class="test.primaris.security.UserDetailsServiceImpl" />

    <beans:bean id="daoAuthenticationProvider"
                class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <beans:property name="userDetailsService" ref="userDetailsService"/>
        <beans:property name="passwordEncoder" ref="passwordEncoder"/>
        <beans:property name="saltSource" ref="saltSource"/>
    </beans:bean>

    <beans:bean
            class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <beans:property name="exceptionMappings">
            <beans:props>
                <beans:prop key="org.springframework.security.access.AccessDeniedException">/index.html</beans:prop>
            </beans:props>
        </beans:property>
    </beans:bean>

    <!--<beans:bean id="authenticationManager"-->
                <!--class="org.springframework.security.authentication.ProviderManager">-->
        <!--<beans:property name="providers">-->
            <!--<beans:list>-->
                <!--<beans:ref local="daoAuthenticationProvider"/>-->
            <!--</beans:list>-->
        <!--</beans:property>-->
    <!--</beans:bean>-->

    <authentication-manager>
        <authentication-provider ref="daoAuthenticationProvider"/>
    </authentication-manager>

    <beans:bean id="saltSource"
          class="org.springframework.security.authentication.dao.ReflectionSaltSource">
        <beans:property name="userPropertyToUse" value="username"/>
    </beans:bean>

    <beans:bean id="passwordEncoder"
          class="org.springframework.security.authentication.encoding.ShaPasswordEncoder" />

</beans:beans>