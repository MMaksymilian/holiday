<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml"
                layout="vertical"
                backgroundGradientColors="[0x000000,0x323232]"
                xmlns:components="flex.user.components.*"
                initialize="initializeHandler()"
                creationComplete="addEvents()"
                xmlns:componentsAdmin="flex.admin.components.*">

    <mx:Metadata>
        [Event(name=ChangeMonthEvent.CHANGED_MONTH, type="flex.event.user.ChangeMonthEvent")]
    </mx:Metadata>

    <mx:Script><![CDATA[
        import flex.admin.model.UserEntry;
        import flex.data.Holiday;
        import flex.event.user.ChangeMonthEvent;
        import flex.event.user.GetSelectedDateRangeEvent;
        import flex.event.user.HolidaySendRequestEvent;
        import flex.service.HolidayFlexService;
        import flex.user.components.HolidayApplyForm;

        import mx.collections.ArrayCollection;
        import mx.controls.Alert;
        import mx.core.Application;
        import mx.managers.PopUpManager;
        import mx.rpc.events.ResultEvent;

        public var userName:String = "Kowalski";// Application.application.parameters.name1.toString();
        public var userLogin:String = "kowalski";// Application.application.parameters.name2.toString();

        private var holidayFlexService:HolidayFlexService;

        [Bindable]
        private var formatDateString:String = 'DD - MM - YYYY';
        private var holidayData:ArrayCollection;
        private var userEntry:UserEntry;
        private var holidayForm:HolidayApplyForm;

        private function initializeHandler():void {
            /*pobranie danych do tabeli*/
            holidayFlexService = new HolidayFlexService();
            getDataForMonth(getFirstOfTheMonth(new Date()));
            /*dodanie danych do EntryGrid, czyli kwadraty z numerami dat*/
            userEntry = new UserEntry(userName, userLogin,
                    (new Date()).getMonth(), (new Date()).getFullYear());
            entryGrid.addEntry(userEntry);
        }

        private function addEvents():void {
            addEventListener(ChangeMonthEvent.CHANGED_MONTH, changedMonthListener);
            addEventListener(GetSelectedDateRangeEvent.SELECTED_DATE_RANGE, getDataForDateRangeListener);
        }

        private function updateDataHandler(event:ResultEvent):void {
            holidayData = new ArrayCollection();
            holidayData.source = (event.result as ArrayCollection).source;
            holidayTable.dataProvider = holidayData;

            userEntry.readUserData(holidayData);
            entryGrid.replaceEntries(userEntry);
        }

        private function updateDataRangeHandler(event:ResultEvent):void {
            holidayData = new ArrayCollection();
            holidayData.source = (event.result as ArrayCollection).source;
            holidayTable.dataProvider = holidayData;
        }

        private function holidayFormSendRequestListener(event:HolidaySendRequestEvent):void {
            holidayFlexService.requestHoliday(event.holidayData, succesfullyAddedHolidayRequestHandler);
            holidayData.addItem(event.holidayData);
        }

        private function succesfullyAddedHolidayRequestHandler(event:ResultEvent):void {

            Alert.show("status: " + event.statusCode);
            if (event.result == "success") {
                Alert.show('Zapisano podanie o urlop.');
//                holidayForm.close();
            }
            if (event.result == "failure") {
                Alert.show('Zapisywanie nie powiodło się.');
            }
        }

        private function chooseDate():void {
            var chosenDate:Date = holidayDateChooser.selectedDate;
            var from:Date = getFirstOfTheMonth(chosenDate);
            var month:int = from.getMonth();
            var year:int = from.getFullYear();
            month = (month + 1) % 13;
            if (month == 0) {
                month = 1;
            }
            var eventObject:ChangeMonthEvent = new ChangeMonthEvent(ChangeMonthEvent.CHANGED_MONTH, from, new Date(year, month, 1));
            dispatchEvent(eventObject);
        }

        private function changedMonthListener(event:ChangeMonthEvent):void {
            dateRange.changeDates(event.firstDate, event.secondDate);
            userEntry = new UserEntry(userName, userLogin, event.firstDate.getMonth(), event.firstDate.getFullYear());
            getDataForMonth(event.firstDate);
        }

        private function getDataForMonth(date:Date):void {
            holidayFlexService.findHolidayForCurrentUserAndMonth(date, updateDataHandler)
        }

        private function getDataForDateRangeListener(event:GetSelectedDateRangeEvent):void {
            holidayFlexService.findHolidayForCurrentUserDatesBetween(event.dateFrom, event.dateTo, updateDataRangeHandler);
        }

        private function showWindow():void {
            holidayForm = HolidayApplyForm(PopUpManager.createPopUp(this, HolidayApplyForm, true));
//            PopUpManager.centerPopUp(holidayForm);
            holidayForm.addEventListener(HolidaySendRequestEvent.SEND_HOLIDAY_REQUEST, holidayFormSendRequestListener);
        }

        private function getFirstOfTheMonth(currentDate:Date):Date {
            var month:int = currentDate.getMonth();
            var year:int = currentDate.getFullYear();
            return new Date(year, month, 1);
        }
        ]]></mx:Script>

    <mx:Panel width="100%" backgroundColor="0xDCDCDC" paddingLeft="40" paddingRight="40" paddingTop="10" paddingBottom="10">
            <components:DateRange id="dateRange"/>
        <componentsAdmin:MonthChooser id="holidayDateChooser" yearNavigationEnabled="true" styleName="monthChooserStyles" change="{chooseDate()}"/>
        <componentsAdmin:EntryGrid id="entryGrid"/>
        <mx:VBox horizontalAlign="center">
            <components:HolidayTable id="holidayTable" dateFormatString="{formatDateString}"/>
            <mx:Button horizontalCenter="0" color="0x323232" height="32" label="Napisz podanie o urlop" cornerRadius="12" click="showWindow();"/>
        </mx:VBox>

    </mx:Panel>

    <mx:Style>
        .holidayFormFillField {
            text-decoration: underline;
        }
    </mx:Style>
</mx:Application>